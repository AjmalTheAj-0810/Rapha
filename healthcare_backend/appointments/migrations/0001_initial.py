# Generated by Django 5.2.3 on 2025-06-30 11:46

import appointments.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Appointment date', validators=[appointments.models.validate_future_date])),
                ('start_time', models.TimeField(help_text='Appointment start time', validators=[appointments.models.validate_business_hours])),
                ('end_time', models.TimeField(help_text='Appointment end time')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('appointment_type', models.CharField(choices=[('consultation', 'Initial Consultation'), ('follow_up', 'Follow-up'), ('therapy', 'Therapy Session'), ('assessment', 'Assessment'), ('treatment', 'Treatment'), ('emergency', 'Emergency')], default='consultation', max_length=20)),
                ('reason', models.TextField(help_text='Reason for appointment')),
                ('symptoms', models.TextField(blank=True, help_text='Current symptoms or concerns', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes from physiotherapist', null=True)),
                ('treatment_plan', models.TextField(blank=True, help_text='Treatment plan and recommendations', null=True)),
                ('prescription', models.TextField(blank=True, help_text='Prescribed exercises or medications', null=True)),
                ('next_appointment_recommended', models.BooleanField(default=False, help_text='Whether a follow-up appointment is recommended')),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Appointment cost', max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('partial', 'Partially Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('reminder_sent', models.BooleanField(default=False, help_text='Whether reminder notification was sent')),
                ('cancellation_reason', models.TextField(blank=True, help_text='Reason for cancellation', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'appointments',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('prescription', 'Prescription'), ('report', 'Medical Report'), ('xray', 'X-Ray'), ('mri', 'MRI Scan'), ('lab_result', 'Lab Result'), ('treatment_plan', 'Treatment Plan'), ('other', 'Other')], default='other', max_length=20)),
                ('title', models.CharField(help_text='Document title or description', max_length=200)),
                ('file', models.FileField(help_text='Upload document file', upload_to='appointment_documents/')),
                ('is_confidential', models.BooleanField(default=True, help_text='Whether document contains confidential information')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'appointment_documents',
            },
        ),
        migrations.CreateModel(
            name='AppointmentFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Overall rating for the appointment')),
                ('punctuality_rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], default=3, help_text='Rating for physiotherapist punctuality')),
                ('professionalism_rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], default=3, help_text='Rating for physiotherapist professionalism')),
                ('treatment_effectiveness', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], default=3, help_text='Rating for treatment effectiveness')),
                ('comments', models.TextField(blank=True, help_text='Additional comments about the appointment', max_length=1000, null=True)),
                ('would_recommend', models.BooleanField(default=True, help_text='Would recommend this physiotherapist')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'appointment_feedback',
            },
        ),
    ]
