import React from 'react';
import { 
  User, 
  Calendar, 
  Phone, 
  Mail, 
  TrendingUp, 
  Clock, 
  Target, 
  AlertCircle,
  CheckCircle,
  Activity,
  Heart,
  Zap,
  Award,
  Flame,
  Download,
  FileText,
  Printer,
  Share2,
  Stethoscope,
  Pill,
  AlertTriangle
} from 'lucide-react';

const PatientRecordCard = ({ patient }) => {
  if (!patient || patient.isOverview) {
    return (
      <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
        <div className="text-center py-8">
          <User className="h-12 w-12 text-gray-300 mx-auto mb-4" />
          <h3 className="text-lg font-medium text-gray-900 mb-2">Select a Patient</h3>
          <p className="text-gray-600">Search and select a patient to view their detailed record</p>
        </div>
      </div>
    );
  }

  const generatePDF = () => {
    // Create comprehensive patient report content
    const reportContent = `
PATIENT MEDICAL RECORD
======================

PATIENT INFORMATION
-------------------
Name: ${patient.name}
Age: ${patient.age}
Email: ${patient.email}
Phone: ${patient.phone}
Start Date: ${patient.startDate}

SURGERY INFORMATION
-------------------
Surgery Type: ${patient.surgeryType?.toUpperCase() || 'N/A'}
Surgery Date: ${patient.surgeryDate || 'N/A'}
Surgeon: ${patient.surgeon || 'N/A'}

CURRENT STATUS
--------------
Status: ${patient.status?.toUpperCase()}
Condition: ${patient.condition}
Current Pain Level: ${patient.painLevel}/10
Overall Progress: ${patient.progress}%
Exercise Completion: ${patient.exerciseCompletion}%
Adherence Rate: ${patient.adherence}%
Current Streak: ${patient.streak} days

SESSION INFORMATION
-------------------
Total Sessions: ${patient.totalSessions}
Completed Sessions: ${patient.completedSessions}
Last Session: ${patient.lastSession}
Next Session: ${patient.nextSession}

MEDICAL HISTORY
---------------
${patient.medicalHistory || 'No medical history recorded'}

CURRENT MEDICATIONS
-------------------
${patient.currentMedications || 'No current medications'}

ALLERGIES
---------
${patient.allergies || 'No known allergies'}

CLINICAL NOTES
--------------
${patient.notes}

PROGRESS SUMMARY
----------------
- Recovery Progress: ${patient.progress}% complete
- Exercise Adherence: ${patient.adherence}%
- Pain Reduction: Significant improvement noted
- Mobility: Improving steadily
- Patient Compliance: ${patient.adherence >= 80 ? 'Excellent' : patient.adherence >= 60 ? 'Good' : 'Needs Improvement'}

RECOMMENDATIONS
---------------
- Continue current exercise regimen
- Monitor pain levels closely
- Maintain regular session schedule
- ${patient.status === 'attention' ? 'Requires immediate follow-up' : 'Continue current treatment plan'}

Report Generated: ${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}
Generated by: Physiotherapy Management System
    `;

    // Create and download PDF
    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${patient.name.replace(/\s+/g, '_')}_Medical_Record_${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    window.URL.revokeObjectURL(url);

    // Show success message
    alert(`Medical record for ${patient.name} has been downloaded successfully!`);
  };

  const printRecord = () => {
    const printContent = `
      <html>
        <head>
          <title>Patient Record - ${patient.name}</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }
            .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 20px; margin-bottom: 30px; }
            .section { margin-bottom: 25px; }
            .section-title { font-size: 18px; font-weight: bold; color: #333; border-bottom: 1px solid #ccc; padding-bottom: 5px; margin-bottom: 10px; }
            .info-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
            .info-item { margin-bottom: 10px; }
            .label { font-weight: bold; color: #555; }
            .progress-bar { width: 100%; height: 20px; background-color: #f0f0f0; border-radius: 10px; overflow: hidden; margin-top: 5px; }
            .progress-fill { height: 100%; background-color: #10b981; }
            @media print { body { margin: 0; } }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>PATIENT MEDICAL RECORD</h1>
            <h2>${patient.name}</h2>
            <p>Generated on ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}</p>
          </div>
          
          <div class="section">
            <div class="section-title">Patient Information</div>
            <div class="info-grid">
              <div class="info-item"><span class="label">Name:</span> ${patient.name}</div>
              <div class="info-item"><span class="label">Age:</span> ${patient.age}</div>
              <div class="info-item"><span class="label">Email:</span> ${patient.email}</div>
              <div class="info-item"><span class="label">Phone:</span> ${patient.phone}</div>
              <div class="info-item"><span class="label">Start Date:</span> ${patient.startDate}</div>
              <div class="info-item"><span class="label">Status:</span> ${patient.status?.toUpperCase()}</div>
            </div>
          </div>

          <div class="section">
            <div class="section-title">Surgery Information</div>
            <div class="info-grid">
              <div class="info-item"><span class="label">Surgery Type:</span> ${patient.surgeryType?.toUpperCase() || 'N/A'}</div>
              <div class="info-item"><span class="label">Surgery Date:</span> ${patient.surgeryDate || 'N/A'}</div>
              <div class="info-item"><span class="label">Surgeon:</span> ${patient.surgeon || 'N/A'}</div>
              <div class="info-item"><span class="label">Condition:</span> ${patient.condition}</div>
            </div>
          </div>

          <div class="section">
            <div class="section-title">Current Metrics</div>
            <div class="info-grid">
              <div class="info-item">
                <span class="label">Overall Progress:</span> ${patient.progress}%
                <div class="progress-bar">
                  <div class="progress-fill" style="width: ${patient.progress}%"></div>
                </div>
              </div>
              <div class="info-item">
                <span class="label">Exercise Completion:</span> ${patient.exerciseCompletion}%
                <div class="progress-bar">
                  <div class="progress-fill" style="width: ${patient.exerciseCompletion}%"></div>
                </div>
              </div>
              <div class="info-item">
                <span class="label">Adherence Rate:</span> ${patient.adherence}%
                <div class="progress-bar">
                  <div class="progress-fill" style="width: ${patient.adherence}%"></div>
                </div>
              </div>
              <div class="info-item"><span class="label">Pain Level:</span> ${patient.painLevel}/10</div>
              <div class="info-item"><span class="label">Current Streak:</span> ${patient.streak} days</div>
            </div>
          </div>

          <div class="section">
            <div class="section-title">Session Information</div>
            <div class="info-grid">
              <div class="info-item"><span class="label">Total Sessions:</span> ${patient.totalSessions}</div>
              <div class="info-item"><span class="label">Completed Sessions:</span> ${patient.completedSessions}</div>
              <div class="info-item"><span class="label">Last Session:</span> ${patient.lastSession}</div>
              <div class="info-item"><span class="label">Next Session:</span> ${patient.nextSession}</div>
            </div>
          </div>

          <div class="section">
            <div class="section-title">Medical Information</div>
            <div class="info-item"><span class="label">Medical History:</span><br>${patient.medicalHistory || 'No medical history recorded'}</div>
            <div class="info-item"><span class="label">Current Medications:</span><br>${patient.currentMedications || 'No current medications'}</div>
            <div class="info-item"><span class="label">Allergies:</span><br>${patient.allergies || 'No known allergies'}</div>
          </div>

          <div class="section">
            <div class="section-title">Clinical Notes</div>
            <p>${patient.notes}</p>
          </div>
        </body>
      </html>
    `;

    const printWindow = window.open('', '_blank');
    printWindow.document.write(printContent);
    printWindow.document.close();
    printWindow.print();
  };

  const shareRecord = () => {
    if (navigator.share) {
      navigator.share({
        title: `Medical Record - ${patient.name}`,
        text: `Medical record for ${patient.name} - Progress: ${patient.progress}%`,
        url: window.location.href
      });
    } else {
      // Fallback for browsers that don't support Web Share API
      const shareText = `Medical Record Summary for ${patient.name}:\n\nProgress: ${patient.progress}%\nAdherence: ${patient.adherence}%\nPain Level: ${patient.painLevel}/10\nStatus: ${patient.status}`;
      navigator.clipboard.writeText(shareText).then(() => {
        alert('Record summary copied to clipboard!');
      });
    }
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'excellent': return 'bg-green-100 text-green-800 border-green-200';
      case 'active': return 'bg-blue-100 text-blue-800 border-blue-200';
      case 'attention': return 'bg-yellow-100 text-yellow-800 border-yellow-200';
      default: return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  const getStatusIcon = (status) => {
    switch (status) {
      case 'excellent': return <CheckCircle className="h-4 w-4" />;
      case 'attention': return <AlertCircle className="h-4 w-4" />;
      default: return <Activity className="h-4 w-4" />;
    }
  };

  const getPainLevelColor = (level) => {
    if (level <= 3) return 'text-green-600';
    if (level <= 6) return 'text-yellow-600';
    return 'text-red-600';
  };

  const getProgressColor = (progress) => {
    if (progress >= 80) return 'from-green-400 to-green-600';
    if (progress >= 60) return 'from-blue-400 to-blue-600';
    if (progress >= 40) return 'from-yellow-400 to-yellow-600';
    return 'from-red-400 to-red-600';
  };

  const getSurgeryTypeColor = (surgeryType) => {
    const colors = {
      knee: 'bg-blue-50 text-blue-700 border-blue-200',
      shoulder: 'bg-purple-50 text-purple-700 border-purple-200',
      spine: 'bg-red-50 text-red-700 border-red-200',
      hip: 'bg-green-50 text-green-700 border-green-200',
      ankle: 'bg-orange-50 text-orange-700 border-orange-200'
    };
    return colors[surgeryType] || 'bg-gray-50 text-gray-700 border-gray-200';
  };

  return (
    <div className="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
      {/* Header with Download Actions */}
      <div className="bg-gradient-to-r from-blue-50 to-indigo-50 p-6 border-b border-gray-200">
        <div className="flex items-start justify-between">
          <div className="flex items-center gap-4">
            <div className="w-16 h-16 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center text-2xl text-white shadow-lg">
              {patient.avatar}
            </div>
            <div>
              <h2 className="text-xl font-bold text-gray-900">{patient.name}</h2>
              <p className="text-blue-600 font-medium">{patient.condition}</p>
              <div className="flex items-center gap-2 mt-1">
                <p className="text-sm text-gray-600">Age: {patient.age} • Started: {patient.startDate}</p>
                {patient.surgeryType && (
                  <span className={`px-2 py-1 rounded-lg border text-xs font-medium ${getSurgeryTypeColor(patient.surgeryType)}`}>
                    {patient.surgeryType.toUpperCase()} Surgery
                  </span>
                )}
              </div>
            </div>
          </div>
          <div className="flex items-center gap-2">
            <div className={`px-3 py-2 rounded-lg border flex items-center gap-2 ${getStatusColor(patient.status)}`}>
              {getStatusIcon(patient.status)}
              <span className="font-medium capitalize">{patient.status}</span>
            </div>
          </div>
        </div>

        {/* Action Buttons */}
        <div className="flex gap-3 mt-4">
          <button
            onClick={generatePDF}
            className="flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all duration-200 hover:scale-105 shadow-sm"
          >
            <Download className="h-4 w-4" />
            Download PDF
          </button>
          <button
            onClick={printRecord}
            className="flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-all duration-200 hover:scale-105 shadow-sm"
          >
            <Printer className="h-4 w-4" />
            Print Record
          </button>
          <button
            onClick={shareRecord}
            className="flex items-center gap-2 px-4 py-2 border border-gray-200 text-gray-700 rounded-lg hover:bg-gray-50 transition-all duration-200 hover:scale-105 shadow-sm"
          >
            <Share2 className="h-4 w-4" />
            Share
          </button>
        </div>
      </div>

      {/* Surgery Information */}
      {patient.surgeryType && (
        <div className="p-6 border-b border-gray-200 bg-gradient-to-r from-gray-50 to-blue-50">
          <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
            <Stethoscope className="h-5 w-5 text-blue-600" />
            Surgery Information
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                <FileText className="h-4 w-4 text-blue-600" />
              </div>
              <div>
                <p className="text-sm text-gray-600">Surgery Type</p>
                <p className="font-medium text-gray-900">{patient.surgeryType.toUpperCase()}</p>
              </div>
            </div>
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                <Calendar className="h-4 w-4 text-purple-600" />
              </div>
              <div>
                <p className="text-sm text-gray-600">Surgery Date</p>
                <p className="font-medium text-gray-900">{patient.surgeryDate}</p>
              </div>
            </div>
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                <User className="h-4 w-4 text-green-600" />
              </div>
              <div>
                <p className="text-sm text-gray-600">Surgeon</p>
                <p className="font-medium text-gray-900">{patient.surgeon}</p>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Contact Information */}
      <div className="p-6 border-b border-gray-200">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Contact Information</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
              <Phone className="h-4 w-4 text-blue-600" />
            </div>
            <div>
              <p className="text-sm text-gray-600">Phone</p>
              <p className="font-medium text-gray-900">{patient.phone}</p>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
              <Mail className="h-4 w-4 text-green-600" />
            </div>
            <div>
              <p className="text-sm text-gray-600">Email</p>
              <p className="font-medium text-gray-900">{patient.email}</p>
            </div>
          </div>
        </div>
      </div>

      {/* Key Metrics */}
      <div className="p-6 border-b border-gray-200">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Key Metrics</h3>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          <div className="text-center p-4 bg-gradient-to-br from-green-50 to-green-100 rounded-lg">
            <TrendingUp className="h-6 w-6 text-green-600 mx-auto mb-2" />
            <div className="text-2xl font-bold text-green-600">{patient.progress}%</div>
            <div className="text-sm text-gray-600">Progress</div>
          </div>
          <div className="text-center p-4 bg-gradient-to-br from-blue-50 to-blue-100 rounded-lg">
            <Target className="h-6 w-6 text-blue-600 mx-auto mb-2" />
            <div className="text-2xl font-bold text-blue-600">{patient.adherence}%</div>
            <div className="text-sm text-gray-600">Adherence</div>
          </div>
          <div className="text-center p-4 bg-gradient-to-br from-orange-50 to-orange-100 rounded-lg">
            <Flame className="h-6 w-6 text-orange-600 mx-auto mb-2" />
            <div className="text-2xl font-bold text-orange-600">{patient.streak}</div>
            <div className="text-sm text-gray-600">Day Streak</div>
          </div>
          <div className="text-center p-4 bg-gradient-to-br from-purple-50 to-purple-100 rounded-lg">
            <Heart className={`h-6 w-6 mx-auto mb-2 ${getPainLevelColor(patient.painLevel)}`} />
            <div className={`text-2xl font-bold ${getPainLevelColor(patient.painLevel)}`}>{patient.painLevel}/10</div>
            <div className="text-sm text-gray-600">Pain Level</div>
          </div>
        </div>
      </div>

      {/* Medical Information */}
      <div className="p-6 border-b border-gray-200">
        <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
          <Pill className="h-5 w-5 text-purple-600" />
          Medical Information
        </h3>
        <div className="space-y-4">
          <div className="bg-blue-50 p-4 rounded-lg border-l-4 border-blue-400">
            <h4 className="font-medium text-blue-900 mb-2">Medical History</h4>
            <p className="text-blue-800 text-sm">{patient.medicalHistory}</p>
          </div>
          <div className="bg-green-50 p-4 rounded-lg border-l-4 border-green-400">
            <h4 className="font-medium text-green-900 mb-2">Current Medications</h4>
            <p className="text-green-800 text-sm">{patient.currentMedications}</p>
          </div>
          <div className="bg-yellow-50 p-4 rounded-lg border-l-4 border-yellow-400">
            <h4 className="font-medium text-yellow-900 mb-2 flex items-center gap-2">
              <AlertTriangle className="h-4 w-4" />
              Allergies
            </h4>
            <p className="text-yellow-800 text-sm">{patient.allergies}</p>
          </div>
        </div>
      </div>

      {/* Session Information */}
      <div className="p-6 border-b border-gray-200">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Session Information</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
              <Calendar className="h-4 w-4 text-purple-600" />
            </div>
            <div>
              <p className="text-sm text-gray-600">Total Sessions</p>
              <p className="font-medium text-gray-900">{patient.completedSessions}/{patient.totalSessions}</p>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
              <Clock className="h-4 w-4 text-green-600" />
            </div>
            <div>
              <p className="text-sm text-gray-600">Last Session</p>
              <p className="font-medium text-gray-900">{patient.lastSession}</p>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
              <Calendar className="h-4 w-4 text-blue-600" />
            </div>
            <div>
              <p className="text-sm text-gray-600">Next Session</p>
              <p className="font-medium text-gray-900">{patient.nextSession}</p>
            </div>
          </div>
        </div>
      </div>

      {/* Progress Visualization */}
      <div className="p-6 border-b border-gray-200">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Progress Overview</h3>
        
        {/* Overall Progress */}
        <div className="mb-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-sm font-medium text-gray-700">Overall Recovery</span>
            <span className="text-sm font-bold text-gray-900">{patient.progress}%</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-3 overflow-hidden">
            <div 
              className={`h-3 rounded-full transition-all duration-1000 ease-out bg-gradient-to-r ${getProgressColor(patient.progress)} relative`}
              style={{ width: `${patient.progress}%` }}
            >
              <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white to-transparent opacity-30 animate-pulse"></div>
            </div>
          </div>
        </div>

        {/* Exercise Completion */}
        <div className="mb-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-sm font-medium text-gray-700">Exercise Completion</span>
            <span className="text-sm font-bold text-gray-900">{patient.exerciseCompletion}%</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-3 overflow-hidden">
            <div 
              className={`h-3 rounded-full transition-all duration-1000 ease-out bg-gradient-to-r ${getProgressColor(patient.exerciseCompletion)}`}
              style={{ width: `${patient.exerciseCompletion}%` }}
            />
          </div>
        </div>

        {/* Adherence Rate */}
        <div>
          <div className="flex items-center justify-between mb-2">
            <span className="text-sm font-medium text-gray-700">Adherence Rate</span>
            <span className="text-sm font-bold text-gray-900">{patient.adherence}%</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-3 overflow-hidden">
            <div 
              className={`h-3 rounded-full transition-all duration-1000 ease-out bg-gradient-to-r ${getProgressColor(patient.adherence)}`}
              style={{ width: `${patient.adherence}%` }}
            />
          </div>
        </div>
      </div>

      {/* Notes */}
      <div className="p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Clinical Notes</h3>
        <div className="bg-gray-50 p-4 rounded-lg border-l-4 border-blue-400">
          <p className="text-gray-700">{patient.notes}</p>
        </div>
        
        {/* Quick Actions */}
        <div className="flex gap-3 mt-4">
          <button className="flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center gap-2">
            <Calendar className="h-4 w-4" />
            Schedule Session
          </button>
          <button className="flex-1 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center gap-2">
            <Zap className="h-4 w-4" />
            Assign Exercise
          </button>
          <button className="flex-1 px-4 py-2 border border-gray-200 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors flex items-center justify-center gap-2">
            <User className="h-4 w-4" />
            View Full Profile
          </button>
        </div>
      </div>
    </div>
  );
};

export default PatientRecordCard;